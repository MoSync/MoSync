/**
* The available widget properties for a #MAW_NAV_BAR. See \ref WidgetProperties "Widget properties" for more properties.
*/
group WidgetNavBarProperties "Navigation Bar" {
	constset MAString MAW_NAV_BAR_ {
		/**
		* @brief Sets or gets the title.
		*
		* @validvalue A null-terminated string.
		*
		* @setandget
		*
		* @par Example
		* \code
		*	maWidgetSetProperty(navBarHandle, MAW_NAV_BAR_TITLE, "MyScreen");
		* \endcode
		*/
		TITLE = "title";

		/**
		* Sets the icon of the nav bar. This won't be scaled at all.
		*
		* @validvalue MoSync handle to an uncompressed image resource. The size of the image should be small enough to fit in the nav bar.
		*
		* @setonly
		*
		* @par Example
		* \code
		*	maWidgetSetProperty(navBarHandle, MAW_NAV_BAR_ICON, toString(R_MY_IMAGE));
		* \endcode
		*/
		ICON = "icon";

		/**
		* @brief Sets the text for the back button.
		* This can be set only when the navigation bar was
		* attached to a screen that is not part of a stack screen.
		* Note: this is available only on iOS.
		* On Android the back behavior is handled by the device's back button.
		*
		* @validvalue A null-terminated string.
		*
		* @setandget
		*
		* @par Example
		* \code
		*	maWidgetSetProperty(navBarHandle, MAW_NAV_BAR_BACK_BTN, "Home");
		* \endcode
		*/
		BACK_BTN = "backBtn";

		/**
		* @brief Sets the font color of the title.
		*
		* @validvalue A hexadecimal value 0xRRGGBB, where R, G and B are the red, green and blue components respectively.
		*
		* @setonly
		*
		* @par Example
		* \code
		*	maWidgetSetProperty(navBarHandle, MAW_NAV_BAR_TITLE_FONT_COLOR, "0xff0000");
		* \endcode
		*/
		TITLE_FONT_COLOR = "titleFontColor";

		/**
		* @brief Sets the font size in points of the title.
		*
		* @validvalue A float that specifies the number of pixels on Android
		* and WP7, and number of points on iOS.
		*
		* @setonly
		*
		* @par Example
		* \code
		*	maWidgetSetProperty(navBarHandle, MAW_NAV_BAR_TITLE_FONT_SIZE, "13.0");
		* \endcode
		*/
		TITLE_FONT_SIZE = "titleFontSize";

		/**
		* @brief Sets the typeface and style in which the title should be displayed.
		*
		* @validvalue A font handle received from loading fonts using
		* #maFontGetName and #maFontLoadWithName syscalls.
		*
		* @setonly
		*
		* @par Example
		* \code
		*	int nrFonts = maFontGetCount();
		*	 char buf[256];
		*	 // Get first font name.
		*	 maFontGetName(1, buf, 256);
		*	 // Load that font for size 10.
		*	 int fontHandle = maFontLoadWithName(buf, 10);
		*	 // Set that font to the label.
		*	maWidgetSetProperty(navBarHandle, MAW_NAV_BAR_TITLE_FONT_HANDLE, toString(fontHandle));
		* \endcode
		*/
		TITLE_FONT_HANDLE = "titleFontHandle";
	}
} // end of WidgetNavBarProperties
