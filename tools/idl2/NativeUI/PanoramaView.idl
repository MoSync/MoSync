/**
* The available widget properties for a #MAW_PANORAMA_VIEW. See \ref WidgetProperties "Widget properties" for more properties
*/
group WidgetPanoramaViewProperties "Panorama View" {
	constset MAString MAW_PANORAMA_VIEW_ {
		/**
		* @copydoc #MAW_SCREEN_TITLE
		*/
		TITLE = "title";

		/**
		* @brief Sets or gets the currently shown screen to the screen with the given index.
		*
		* @validvalue A 0-indexed tab number.
		*
		* @setandget
		*
		* @par Example set
		* \code
		*	maWidgetSetProperty(panoramaViewHandle, MAW_PANORAMA_VIEW_CURRENT_SCREEN, "1");
		* \endcode
		*
		* @par Example get
		* \code
		*	char currentScreenBuffer[BUFFER_SIZE];
		*	int result = maWidgetGetProperty(
		*		panoramaViewHandle,
		*		MAW_PANORAMA_VIEW_CURRENT_SCREEN,
		*		currentScreenBuffer,
		*		BUFFER_SIZE);
		*	if (result > 0)
		*	{
		*		// Do something with current screen.
		*	}
		* \endcode
		*/
		CURRENT_SCREEN = "currentScreen";

		/**
		 * @brief Sets or gets the background image of the view.
		 *
		 * @validvalue MoSync handle to an uncompressed image resource. The size of the image should be large enough to fill the space used by the panorama
		 *
		 * @setandget
		 *
		 * @par Example
		 * \code
		 *	maWidgetSetProperty(panoramaViewHandle, MAW_PANORAMA_VIEW_BACKGROUND_IMAGE, toString(R_MY_IMG));
		 * \endcode
		 */
		BACKGROUND_IMAGE = "backgroundImage";

		/**
		* @brief Check if a panorama view is shown.
		*
		* @validvalue "true" if the panorama is visible, "false" otherwise.
		*
		* @getonly
		*
		* @par Example
		* \code
		*	char buffer[BUFFER_SIZE];
		*	int result = maWidgetGetProperty(panoramaHandle, MAW_PANORAMA_VIEW_IS_SHOWN,
		*                                    buffer, BUFFER_SIZE);
		*	if(result == MAW_RES_OK && strcmp(buffer, "true") == 0)
		*	{
		*		// Panorama view is visible.
		*	}
		* \endcode
		*/
		IS_SHOWN = "isShown";
	}
} // end of WidgetPanoramaViewProperties
