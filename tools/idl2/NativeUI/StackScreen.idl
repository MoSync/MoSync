/**
* The available widget properties for a #MAW_STACK_SCREEN. See \ref WidgetProperties "Widget properties" for more properties.
*/
group WidgetStackScreenProperties "Stack screen" {
	constset MAString MAW_STACK_SCREEN_ {
		/**
		* @copydoc #MAW_SCREEN_TITLE
		*/
		TITLE = "title";

		/**
		* @copydoc #MAW_SCREEN_ICON
		*/
		ICON = "icon";

		/**
		* @brief Specifies whether the back button automatically should pop the stack screen.
		*
		* This can have different behaviors on different platforms, on iPhone the UI back button is disabled, on Android the stack screen ignores back button events.
		*
		* @validvalue A boolean string 'true' or 'false'.
		*
		* @setonly
		*
		* @par Example
		* \code
		*	maWidgetSetProperty(stackScreenHandle, MAW_STACK_SCREEN_BACK_BUTTON_ENABLED, "false");
		* \endcode
		*/
		BACK_BUTTON_ENABLED = "backButtonEnabled";

		/**
		* @brief Check if a stack screen is shown.
		*
		* @validvalue "true" if the stack screen is visible, "false" otherwise.
		*
		* @getonly
		*
		* @par Example
		* \code
		*	char buffer[BUFFER_SIZE];
		*	int result = maWidgetGetProperty(stackScreenHandle, MAW_STACK_SCREEN_IS_SHOWN,
		*                                    buffer, BUFFER_SIZE);
		*	if(result == MAW_RES_OK && strcmp(buffer, "true") == 0)
		*	{
		*		// Stack screen is visible.
		*	}
		* \endcode
		*/
		IS_SHOWN = "isShown";

		/**
		* @brief Stack screen's push transition type.
		*
		* Type of the animated transition used when pushing a screen from the current screen stack.
		*
		* Note: This property is available only Android and Windows Phone. On iOS the native navigation animation is used when pushing a screen.
		*
		* @validvalue A transition type from the set of available screen transitions found \link #MAW_TRANSITION_TYPE_NONE here \endlink.
		*
		* @par Example
		* \code
		*	char buf[32];
		* 	sprintf(buf, "%d", MAW_TRANSITION_TYPE_FADE_IN);
		*	maWidgetSetProperty(stackScreenHandle, MAW_STACK_SCREEN_PUSH_TRANSITION_TYPE, buf);
		* \endcode
		*/
		PUSH_TRANSITION_TYPE = "pushTransitionType";

		/**
		* @brief Stack screen's pop transition type.
		*
		* Type of the animated transition used when popping a screen from the current screen stack.
		*
		* Note: This property is available only Android and Windows Phone. On iOS the native navigation animation is used when popping a screen.
		*
		* @validvalue A transition type from the set of available screen transitions found \link #MAW_TRANSITION_TYPE_NONE here \endlink.
		*
		* @par Example
		* \code
		*	char buf[32];
		* 	sprintf(buf, "%d", MAW_TRANSITION_TYPE_FADE_OUT);
		*	maWidgetSetProperty(stackScreenHandle, MAW_STACK_SCREEN_POP_TRANSITION_TYPE, buf);
		* \endcode
		*/
		POP_TRANSITION_TYPE = "popTransitionType";

		/**
		* @brief Stack screen's push transition duration.
		*
		* Duration of the animated transition used when pushing a screen from the current screen stack.
		*
		* Note: This property is available only on Android. On iOS the native navigation animation is used when pushing a screen
		* 	and on Windows Phone is ignored due to the constant duration of the native screen transitions.
		*
		* @validvalue A positive number representing a time interval in milliseconds.
		*
		* @par Example
		* \code
		*	char buf[32];
		* 	sprintf(buf, "%d", 300);
		*	maWidgetSetProperty(stackScreenHandle, MAW_STACK_SCREEN_PUSH_TRANSITION_DURATION, buf);
		* \endcode
		*/
		PUSH_TRANSITION_DURATION = "pushTransitionDuration";

		/**
		* @brief Stack screen's pop transition duration.
		*
		* Duration of the animated transition used when popping a screen from the current screen stack.
		*
		* Note: This property is available only on Android. On iOS the native navigation animation is used when popping a screen
		* 	and on Windows Phone is ignored due to the constant duration of the native screen transitions.
		*
		* @validvalue A positive number representing a time interval in milliseconds.
		*
		* @par Example
		* \code
		*	char buf[32];
		* 	sprintf(buf, "%d", 300);
		*	maWidgetSetProperty(stackScreenHandle, MAW_STACK_SCREEN_POP_TRANSITION_DURATION, buf);
		* \endcode
		*/
		POP_TRANSITION_DURATION = "popTransitionDuration";
	}
} // end of WidgetStackScreenProperties
