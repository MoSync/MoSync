#if IX_OPENGL_ES
typedef signed char khronos_int8_t;
typedef unsigned char khronos_uint8_t;
typedef short int khronos_int16_t;
typedef short unsigned int khronos_uint16_t;
typedef long int khronos_intptr_t;
typedef long unsigned int khronos_uintptr_t;
typedef long int khronos_ssize_t;
typedef long unsigned int khronos_usize_t;
typedef int khronos_int32_t;
typedef unsigned int khronos_uint32_t;
typedef long long int khronos_int64_t;
typedef long long unsigned int khronos_uint64_t;
typedef float khronos_float_t;
typedef khronos_uint64_t khronos_utime_nanoseconds_t;
typedef khronos_int64_t khronos_stime_nanoseconds_t;
typedef void GLvoid;
typedef char GLchar;
typedef unsigned int GLenum;
typedef unsigned char GLboolean;
typedef unsigned int GLbitfield;
typedef khronos_int8_t GLbyte;
typedef short int GLshort;
typedef int GLint;
typedef int GLsizei;
typedef khronos_uint8_t GLubyte;
typedef short unsigned int GLushort;
typedef unsigned int GLuint;
typedef khronos_int32_t GLclampx;
typedef khronos_float_t GLfloat;
typedef khronos_float_t GLclampf;
typedef khronos_int32_t GLfixed;
typedef khronos_intptr_t GLintptr;
typedef khronos_ssize_t GLsizeiptr;
#endif
#if IX_OPENGL_ES
void glActiveTexture(in GLenum texture);
void glBindBuffer(in GLenum target, in GLuint buffer);
void glBindTexture(in GLenum target, in GLuint texture);
void glBlendFunc(in GLenum sfactor, in GLenum dfactor);
void glBufferData(in GLenum target, in GLsizeiptr size, in MAAddress data, in GLenum usage);
void glBufferSubData(in GLenum target, in GLintptr offset, in GLsizeiptr size, in MAAddress data);
void glClear(in GLbitfield mask);
void glClearColor(in GLclampf red, in GLclampf green, in GLclampf blue, in GLclampf alpha);
void glClearDepthf(in GLclampf depth);
void glClearStencil(in GLint s);
void glColorMask(in GLboolean red, in GLboolean green, in GLboolean blue, in GLboolean alpha);
void glCompressedTexImage2D(in GLenum target, in GLint level, in GLenum internalformat, in GLsizei width, in GLsizei height, in GLint border, in GLsizei imageSize, in MAAddress data);
void glCompressedTexSubImage2D(in GLenum target, in GLint level, in GLint xoffset, in GLint yoffset, in GLsizei width, in GLsizei height, in GLenum format, in GLsizei imageSize, in MAAddress data);
void glCopyTexImage2D(in GLenum target, in GLint level, in GLenum internalformat, in GLint x, in GLint y, in GLsizei width, in GLsizei height, in GLint border);
void glCopyTexSubImage2D(in GLenum target, in GLint level, in GLint xoffset, in GLint yoffset, in GLint x, in GLint y, in GLsizei width, in GLsizei height);
void glCullFace(in GLenum mode);
void glDeleteBuffers(in GLsizei n, in GLuint* buffers);
void glDeleteTextures(in GLsizei n, in GLuint* textures);
void glDepthFunc(in GLenum func);
void glDepthMask(in GLboolean flag);
void glDepthRangef(in GLclampf zNear, in GLclampf zFar);
void glDisable(in GLenum cap);
void glDrawArrays(in GLenum mode, in GLint first, in GLsizei count);
void glDrawElements(in GLenum mode, in GLsizei count, in GLenum type, in MAAddress indices);
void glEnable(in GLenum cap);
void glFinish();
void glFlush();
void glFrontFace(in GLenum mode);
void glGenBuffers(in GLsizei n, out GLuint buffers);
void glGenTextures(in GLsizei n, out GLuint textures);
void glGetBooleanv(in GLenum pname, out GLboolean params);
void glGetBufferParameteriv(in GLenum target, in GLenum pname, out GLint params);
GLenum glGetError();
void glGetFloatv(in GLenum pname, out GLfloat params);
void glGetIntegerv(in GLenum pname, out GLint params);
MAHandle glGetStringHandle(in GLenum name);
void glGetTexParameterfv(in GLenum target, in GLenum pname, out GLfloat params);
void glGetTexParameteriv(in GLenum target, in GLenum pname, out GLint params);
void glHint(in GLenum target, in GLenum mode);
GLboolean glIsBuffer(in GLuint buffer);
GLboolean glIsEnabled(in GLenum cap);
GLboolean glIsTexture(in GLuint texture);
void glLineWidth(in GLfloat width);
void glPixelStorei(in GLenum pname, in GLint param);
void glPolygonOffset(in GLfloat factor, in GLfloat units);
void glReadPixels(in GLint x, in GLint y, in GLsizei width, in GLsizei height, in GLenum format, in GLenum type, out MAAddress pixels);
void glSampleCoverage(in GLclampf value, in GLboolean invert);
void glScissor(in GLint x, in GLint y, in GLsizei width, in GLsizei height);
void glStencilFunc(in GLenum func, in GLint ref, in GLuint mask);
void glStencilMask(in GLuint mask);
void glStencilOp(in GLenum fail, in GLenum zfail, in GLenum zpass);
void glTexImage2D(in GLenum target, in GLint level, in GLint internalformat, in GLsizei width, in GLsizei height, in GLint border, in GLenum format, in GLenum type, in MAAddress pixels);
void glTexParameterf(in GLenum target, in GLenum pname, in GLfloat param);
void glTexParameterfv(in GLenum target, in GLenum pname, in GLfloat* params);
void glTexParameteri(in GLenum target, in GLenum pname, in GLint param);
void glTexParameteriv(in GLenum target, in GLenum pname, in GLint* params);
void glTexSubImage2D(in GLenum target, in GLint level, in GLint xoffset, in GLint yoffset, in GLsizei width, in GLsizei height, in GLenum format, in GLenum type, in MAAddress pixels);
void glViewport(in GLint x, in GLint y, in GLsizei width, in GLsizei height);
#endif
#if IX_GL2
void glAttachShader(in GLuint program, in GLuint shader);
void glBindAttribLocation(in GLuint program, in GLuint index, in GLchar* name);
void glBindFramebuffer(in GLenum target, in GLuint framebuffer);
void glBindRenderbuffer(in GLenum target, in GLuint renderbuffer);
void glBlendColor(in GLclampf red, in GLclampf green, in GLclampf blue, in GLclampf alpha);
void glBlendEquation(in GLenum mode);
void glBlendEquationSeparate(in GLenum modeRGB, in GLenum modeAlpha);
void glBlendFuncSeparate(in GLenum srcRGB, in GLenum dstRGB, in GLenum srcAlpha, in GLenum dstAlpha);
GLenum glCheckFramebufferStatus(in GLenum target);
void glCompileShader(in GLuint shader);
GLuint glCreateProgram();
GLuint glCreateShader(in GLenum type);
void glDeleteFramebuffers(in GLsizei n, in GLuint* framebuffers);
void glDeleteProgram(in GLuint program);
void glDeleteRenderbuffers(in GLsizei n, in GLuint* renderbuffers);
void glDeleteShader(in GLuint shader);
void glDetachShader(in GLuint program, in GLuint shader);
void glDisableVertexAttribArray(in GLuint index);
void glEnableVertexAttribArray(in GLuint index);
void glFramebufferRenderbuffer(in GLenum target, in GLenum attachment, in GLenum renderbuffertarget, in GLuint renderbuffer);
void glFramebufferTexture2D(in GLenum target, in GLenum attachment, in GLenum textarget, in GLuint texture, in GLint level);
void glGenerateMipmap(in GLenum target);
void glGenFramebuffers(in GLsizei n, out GLuint framebuffers);
void glGenRenderbuffers(in GLsizei n, out GLuint renderbuffers);
void glGetActiveAttrib(in GLuint program, in GLuint index, in GLsizei bufsize, out GLsizei length, out GLint size, out GLenum type, out GLchar name);
void glGetActiveUniform(in GLuint program, in GLuint index, in GLsizei bufsize, out GLsizei length, out GLint size, out GLenum type, out GLchar name);
void glGetAttachedShaders(in GLuint program, in GLsizei maxcount, out GLsizei count, out GLuint shaders);
int glGetAttribLocation(in GLuint program, in GLchar* name);
void glGetFramebufferAttachmentParameteriv(in GLenum target, in GLenum attachment, in GLenum pname, out GLint params);
void glGetProgramiv(in GLuint program, in GLenum pname, out GLint params);
void glGetProgramInfoLog(in GLuint program, in GLsizei bufsize, out GLsizei length, out GLchar infolog);
void glGetRenderbufferParameteriv(in GLenum target, in GLenum pname, out GLint params);
void glGetShaderiv(in GLuint shader, in GLenum pname, out GLint params);
void glGetShaderInfoLog(in GLuint shader, in GLsizei bufsize, out GLsizei length, out GLchar infolog);
void glGetShaderPrecisionFormat(in GLenum shadertype, in GLenum precisiontype, out GLint range, out GLint precision);
void glGetShaderSource(in GLuint shader, in GLsizei bufsize, out GLsizei length, out GLchar source);
void glGetUniformfv(in GLuint program, in GLint location, out GLfloat params);
void glGetUniformiv(in GLuint program, in GLint location, out GLint params);
int glGetUniformLocation(in GLuint program, in GLchar* name);
void glGetVertexAttribfv(in GLuint index, in GLenum pname, out GLfloat params);
void glGetVertexAttribiv(in GLuint index, in GLenum pname, out GLint params);
void glGetVertexAttribPointerv(in GLuint index, in GLenum pname, out MAAddress pointer);
GLboolean glIsFramebuffer(in GLuint framebuffer);
GLboolean glIsProgram(in GLuint program);
GLboolean glIsRenderbuffer(in GLuint renderbuffer);
GLboolean glIsShader(in GLuint shader);
void glLinkProgram(in GLuint program);
void glReleaseShaderCompiler();
void glRenderbufferStorage(in GLenum target, in GLenum internalformat, in GLsizei width, in GLsizei height);
void glShaderBinary(in GLsizei n, in GLuint* shaders, in GLenum binaryformat, in MAAddress binary, in GLsizei length);
void glShaderSource(in GLuint shader, in GLsizei count, out MAAddress string, in GLint* length);
void glStencilFuncSeparate(in GLenum face, in GLenum func, in GLint ref, in GLuint mask);
void glStencilMaskSeparate(in GLenum face, in GLuint mask);
void glStencilOpSeparate(in GLenum face, in GLenum fail, in GLenum zfail, in GLenum zpass);
void glUniform1f(in GLint location, in GLfloat x);
void glUniform1fv(in GLint location, in GLsizei count, in GLfloat* v);
void glUniform1i(in GLint location, in GLint x);
void glUniform1iv(in GLint location, in GLsizei count, in GLint* v);
void glUniform2f(in GLint location, in GLfloat x, in GLfloat y);
void glUniform2fv(in GLint location, in GLsizei count, in GLfloat* v);
void glUniform2i(in GLint location, in GLint x, in GLint y);
void glUniform2iv(in GLint location, in GLsizei count, in GLint* v);
void glUniform3f(in GLint location, in GLfloat x, in GLfloat y, in GLfloat z);
void glUniform3fv(in GLint location, in GLsizei count, in GLfloat* v);
void glUniform3i(in GLint location, in GLint x, in GLint y, in GLint z);
void glUniform3iv(in GLint location, in GLsizei count, in GLint* v);
void glUniform4f(in GLint location, in GLfloat x, in GLfloat y, in GLfloat z, in GLfloat w);
void glUniform4fv(in GLint location, in GLsizei count, in GLfloat* v);
void glUniform4i(in GLint location, in GLint x, in GLint y, in GLint z, in GLint w);
void glUniform4iv(in GLint location, in GLsizei count, in GLint* v);
void glUniformMatrix2fv(in GLint location, in GLsizei count, in GLboolean transpose, in GLfloat* value);
void glUniformMatrix3fv(in GLint location, in GLsizei count, in GLboolean transpose, in GLfloat* value);
void glUniformMatrix4fv(in GLint location, in GLsizei count, in GLboolean transpose, in GLfloat* value);
void glUseProgram(in GLuint program);
void glValidateProgram(in GLuint program);
void glVertexAttrib1f(in GLuint indx, in GLfloat x);
void glVertexAttrib1fv(in GLuint indx, in GLfloat* values);
void glVertexAttrib2f(in GLuint indx, in GLfloat x, in GLfloat y);
void glVertexAttrib2fv(in GLuint indx, in GLfloat* values);
void glVertexAttrib3f(in GLuint indx, in GLfloat x, in GLfloat y, in GLfloat z);
void glVertexAttrib3fv(in GLuint indx, in GLfloat* values);
void glVertexAttrib4f(in GLuint indx, in GLfloat x, in GLfloat y, in GLfloat z, in GLfloat w);
void glVertexAttrib4fv(in GLuint indx, in GLfloat* values);
void glVertexAttribPointer(in GLuint indx, in GLint size, in GLenum type, in GLboolean normalized, in GLsizei stride, in MAAddress ptr);
#endif
#if IX_GL1
void glAlphaFunc(in GLenum func, in GLclampf ref);
void glClipPlanef(in GLenum plane, in GLfloat* equation);
void glColor4f(in GLfloat red, in GLfloat green, in GLfloat blue, in GLfloat alpha);
void glFogf(in GLenum pname, in GLfloat param);
void glFogfv(in GLenum pname, in GLfloat* params);
void glFrustumf(in GLfloat left, in GLfloat right, in GLfloat bottom, in GLfloat top, in GLfloat zNear, in GLfloat zFar);
void glGetClipPlanef(in GLenum pname, out GLfloat eqn);
void glGetLightfv(in GLenum light, in GLenum pname, out GLfloat params);
void glGetMaterialfv(in GLenum face, in GLenum pname, out GLfloat params);
void glGetTexEnvfv(in GLenum env, in GLenum pname, out GLfloat params);
void glLightModelf(in GLenum pname, in GLfloat param);
void glLightModelfv(in GLenum pname, in GLfloat* params);
void glLightf(in GLenum light, in GLenum pname, in GLfloat param);
void glLightfv(in GLenum light, in GLenum pname, in GLfloat* params);
void glLoadMatrixf(in GLfloat* m);
void glMaterialf(in GLenum face, in GLenum pname, in GLfloat param);
void glMaterialfv(in GLenum face, in GLenum pname, in GLfloat* params);
void glMultMatrixf(in GLfloat* m);
void glMultiTexCoord4f(in GLenum target, in GLfloat s, in GLfloat t, in GLfloat r, in GLfloat q);
void glNormal3f(in GLfloat nx, in GLfloat ny, in GLfloat nz);
void glOrthof(in GLfloat left, in GLfloat right, in GLfloat bottom, in GLfloat top, in GLfloat zNear, in GLfloat zFar);
void glPointParameterf(in GLenum pname, in GLfloat param);
void glPointParameterfv(in GLenum pname, in GLfloat* params);
void glPointSize(in GLfloat size);
void glRotatef(in GLfloat angle, in GLfloat x, in GLfloat y, in GLfloat z);
void glScalef(in GLfloat x, in GLfloat y, in GLfloat z);
void glTexEnvf(in GLenum target, in GLenum pname, in GLfloat param);
void glTexEnvfv(in GLenum target, in GLenum pname, in GLfloat* params);
void glTranslatef(in GLfloat x, in GLfloat y, in GLfloat z);
void glAlphaFuncx(in GLenum func, in GLclampx ref);
void glClearColorx(in GLclampx red, in GLclampx green, in GLclampx blue, in GLclampx alpha);
void glClearDepthx(in GLclampx depth);
void glClientActiveTexture(in GLenum texture);
void glClipPlanex(in GLenum plane, in GLfixed* equation);
void glColor4ub(in GLubyte red, in GLubyte green, in GLubyte blue, in GLubyte alpha);
void glColor4x(in GLfixed red, in GLfixed green, in GLfixed blue, in GLfixed alpha);
void glColorPointer(in GLint size, in GLenum type, in GLsizei stride, in MAAddress pointer);
void glDepthRangex(in GLclampx zNear, in GLclampx zFar);
void glDisableClientState(in GLenum array);
void glEnableClientState(in GLenum array);
void glFogx(in GLenum pname, in GLfixed param);
void glFogxv(in GLenum pname, in GLfixed* params);
void glFrustumx(in GLfixed left, in GLfixed right, in GLfixed bottom, in GLfixed top, in GLfixed zNear, in GLfixed zFar);
void glGetClipPlanex(in GLenum pname, out GLfixed eqn);
void glGetFixedv(in GLenum pname, out GLfixed params);
void glGetLightxv(in GLenum light, in GLenum pname, out GLfixed params);
void glGetMaterialxv(in GLenum face, in GLenum pname, out GLfixed params);
void glGetPointerv(in GLenum pname, out MAAddress params);
void glGetTexEnviv(in GLenum env, in GLenum pname, out GLint params);
void glGetTexEnvxv(in GLenum env, in GLenum pname, out GLfixed params);
void glGetTexParameterxv(in GLenum target, in GLenum pname, out GLfixed params);
void glLightModelx(in GLenum pname, in GLfixed param);
void glLightModelxv(in GLenum pname, in GLfixed* params);
void glLightx(in GLenum light, in GLenum pname, in GLfixed param);
void glLightxv(in GLenum light, in GLenum pname, in GLfixed* params);
void glLineWidthx(in GLfixed width);
void glLoadIdentity();
void glLoadMatrixx(in GLfixed* m);
void glLogicOp(in GLenum opcode);
void glMaterialx(in GLenum face, in GLenum pname, in GLfixed param);
void glMaterialxv(in GLenum face, in GLenum pname, in GLfixed* params);
void glMatrixMode(in GLenum mode);
void glMultMatrixx(in GLfixed* m);
void glMultiTexCoord4x(in GLenum target, in GLfixed s, in GLfixed t, in GLfixed r, in GLfixed q);
void glNormal3x(in GLfixed nx, in GLfixed ny, in GLfixed nz);
void glNormalPointer(in GLenum type, in GLsizei stride, in MAAddress pointer);
void glOrthox(in GLfixed left, in GLfixed right, in GLfixed bottom, in GLfixed top, in GLfixed zNear, in GLfixed zFar);
void glPointParameterx(in GLenum pname, in GLfixed param);
void glPointParameterxv(in GLenum pname, in GLfixed* params);
void glPointSizex(in GLfixed size);
void glPolygonOffsetx(in GLfixed factor, in GLfixed units);
void glPopMatrix();
void glPushMatrix();
void glRotatex(in GLfixed angle, in GLfixed x, in GLfixed y, in GLfixed z);
void glSampleCoveragex(in GLclampx value, in GLboolean invert);
void glScalex(in GLfixed x, in GLfixed y, in GLfixed z);
void glShadeModel(in GLenum mode);
void glTexCoordPointer(in GLint size, in GLenum type, in GLsizei stride, in MAAddress pointer);
void glTexEnvi(in GLenum target, in GLenum pname, in GLint param);
void glTexEnvx(in GLenum target, in GLenum pname, in GLfixed param);
void glTexEnviv(in GLenum target, in GLenum pname, in GLint* params);
void glTexEnvxv(in GLenum target, in GLenum pname, in GLfixed* params);
void glTexParameterx(in GLenum target, in GLenum pname, in GLfixed param);
void glTexParameterxv(in GLenum target, in GLenum pname, in GLfixed* params);
void glTranslatex(in GLfixed x, in GLfixed y, in GLfixed z);
void glVertexPointer(in GLint size, in GLenum type, in GLsizei stride, in MAAddress pointer);
void glPointSizePointerOES(in GLenum type, in GLsizei stride, in MAAddress pointer);
#endif
#if IX_GL_OES_FRAMEBUFFER_OBJECT
GLboolean glIsRenderbufferOES(in GLuint renderbuffer);
GLvoid glBindRenderbufferOES(in GLenum target, in GLuint renderbuffer);
GLvoid glDeleteRenderbuffersOES(in GLsizei n, in GLuint* renderbuffers);
GLvoid glGenRenderbuffersOES(in GLsizei n, out GLuint renderbuffers);
GLvoid glRenderbufferStorageOES(in GLenum target, in GLenum internalformat, in GLsizei width, in GLsizei height);
GLvoid glGetRenderbufferParameterivOES(in GLenum target, in GLenum pname, out GLint params);
GLboolean glIsFramebufferOES(in GLuint framebuffer);
GLvoid glBindFramebufferOES(in GLenum target, in GLuint framebuffer);
GLvoid glDeleteFramebuffersOES(in GLsizei n, in GLuint* framebuffers);
GLvoid glGenFramebuffersOES(in GLsizei n, out GLuint framebuffers);
GLenum glCheckFramebufferStatusOES(in GLenum target);
GLvoid glFramebufferRenderbufferOES(in GLenum target, in GLenum attachment, in GLenum renderbuffertarget, in GLuint renderbuffer);
GLvoid glFramebufferTexture2DOES(in GLenum target, in GLenum attachment, in GLenum textarget, in GLuint texture, in GLint level);
GLvoid glGetFramebufferAttachmentParameterivOES(in GLenum target, in GLenum attachment, in GLenum pname, out GLint params);
GLvoid glGenerateMipmapOES(in GLenum target);
#endif
